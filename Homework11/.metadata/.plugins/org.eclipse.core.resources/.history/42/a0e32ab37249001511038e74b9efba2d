import java.util.ArrayList;
import java.util.List;

public class Graph<T> {

	private List<Vertex> vertices;
	public Graph(){
		vertices = new ArrayList<Vertex>();
	}
	public void addVertex(Vertex vertex){
		if (!vertices.contains(vertex)){
			vertices.add(vertex);
		}
	}
	public void addEdge(Vertex vertex_1,Vertex vertex_2){
		vertex_1.getNeighbours().add(vertex_2);
		vertex_2.getNeighbours()add(vertex_1);
	}
	public boolean containsEdge(Vertex vertex_1,Vertex vertex_2){
		 if(vertex_1.getNeighbors().contains(vertex_2)){
			 return true;
		 } else{
			 return false;
		 }
	 }
	 
	 public void hasPath(Vertex start, Vertex end){	
		 if(start.getNeighbors().contains(end)){
			 System.out.println("There is a path!");			 
		 } else{
			 for(int i = 0; i < start.getNeighbors().size(); i++){
				 Vertex<T> temp = start.getNeighbors().poll();
				 hasPath(temp, end);
			 }
			 return;
		}
	}
}
